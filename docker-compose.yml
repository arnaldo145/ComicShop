version: "3.9"

services:
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.11.1
        container_name: elastic-search
        ports:
            - "9200:9200"
            - "9300:9300"
        environment:
            discovery.type: single-node
            ES_JAVA_OPTS: "-Xms1g -Xmx1g"

    kibana:
        image: docker.elastic.co/kibana/kibana:7.11.1
        container_name: kibana
        ports:
            - "5601:5601"
        depends_on:
            - elasticsearch

    sonarqube:
        container_name: sonarqube
        image: sonarqube
        restart: unless-stopped
        environment:
            - SONARQUBE_JDBC_USERNAME=sonarqube
            - SONARQUBE_JDBC_PASSWORD=sonarpass
            - SONARQUBE_JDBC_URL=jdbc:postgresql://postgres:5432/sonarqube
        ports:
            - "9000:9000"
            - "9092:9092"
        volumes:
            - sonarqube_conf:/opt/sonarqube/conf
            - sonarqube_data:/opt/sonarqube/data
            - sonarqube_extensions:/opt/sonarqube/extensions
            - sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins
        depends_on:
            - postgres

    postgres:
        container_name: postgres
        image: postgres
        restart: unless-stopped
        environment:
            - POSTGRES_USER=sonarqube
            - POSTGRES_PASSWORD=sonarpass
            - POSTGRES_DB=sonarqube
        volumes:
            - sonarqube_db:/var/lib/postgresql
            - postgresql_data:/var/lib/postgresql/data

    mssql:
        image: "mcr.microsoft.com/mssql/server:2019-latest"
        container_name: mssql-server
        environment:
            SA_PASSWORD: "P@ssw0rd"
            ACCEPT_EULA: "Y"
        ports:
            - "1433:1433"

    portainer:
        image: portainer/portainer-ce:latest
        container_name: portainer
        restart: "on-failure:5"
        ports:
            - "9002:9000"
        volumes:
            - portainer_data:/data
            - /var/run/docker.sock:/var/run/docker.sock

    comic-shop-api:
        container_name: comic-shop-api
        build: .
        ports:
            - "8080:80"
        depends_on:
            - mssql
            - elasticsearch
        environment:
            ConnectionStrings__ComicShopContext: "Data Source=host.docker.internal,1433;Initial Catalog=ComicShop;User ID=sa;Password=P@ssw0rd"
            ElasticSearch__Uri: "http://host.docker.internal:9200"

volumes:
    portainer_data:
    postgresql_data:
    sonarqube_bundled-plugins:
    sonarqube_conf:
    sonarqube_data:
    sonarqube_db:
    sonarqube_extensions:
